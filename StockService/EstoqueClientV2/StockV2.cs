//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EstoqueClientV2.StockService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://projetoavaliativo.dm113/02", ConfigurationName="EstoqueClientV2.StockService.IServicoEstoqueV2")]
    public interface IServicoEstoqueV2
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/CheckStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/CheckStockResponse")]
        int CheckStock(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/CheckStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/CheckStockResponse")]
        System.Threading.Tasks.Task<int> CheckStockAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/AddStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/AddStockResponse")]
        bool AddStock(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/AddStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/AddStockResponse")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/RemoveStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/RemoveStockResponse")]
        bool RemoveStock(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/RemoveStock", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoqueV2/RemoveStockResponse")]
        System.Threading.Tasks.Task<bool> RemoveStockAsync(string productCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueV2Channel : EstoqueClientV2.StockService.IServicoEstoqueV2, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueV2Client : System.ServiceModel.ClientBase<EstoqueClientV2.StockService.IServicoEstoqueV2>, EstoqueClientV2.StockService.IServicoEstoqueV2
    {
        
        public ServicoEstoqueV2Client()
        {
        }
        
        public ServicoEstoqueV2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicoEstoqueV2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueV2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueV2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int CheckStock(string productCode)
        {
            return base.Channel.CheckStock(productCode);
        }
        
        public System.Threading.Tasks.Task<int> CheckStockAsync(string productCode)
        {
            return base.Channel.CheckStockAsync(productCode);
        }
        
        public bool AddStock(string productCode, int quantity)
        {
            return base.Channel.AddStock(productCode, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, int quantity)
        {
            return base.Channel.AddStockAsync(productCode, quantity);
        }
        
        public bool RemoveStock(string productCode)
        {
            return base.Channel.RemoveStock(productCode);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStockAsync(string productCode)
        {
            return base.Channel.RemoveStockAsync(productCode);
        }
    }
}
