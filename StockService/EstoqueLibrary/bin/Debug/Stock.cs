//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EstoqueClientV1.StockService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/EstoqueEntityModel")]
    public partial class Stock : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ProdcutDescField;
        
        private string ProductIdField;
        
        private string ProductNameField;
        
        private decimal QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdcutDesc
        {
            get
            {
                return this.ProdcutDescField;
            }
            set
            {
                this.ProdcutDescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId
        {
            get
            {
                return this.ProductIdField;
            }
            set
            {
                this.ProductIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName
        {
            get
            {
                return this.ProductNameField;
            }
            set
            {
                this.ProductNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockData", Namespace="http://schemas.datacontract.org/2004/07/EstoqueLibrary")]
    public partial class StockData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ProductDescField;
        
        private string ProductIdField;
        
        private string ProductNameField;
        
        private decimal QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDesc
        {
            get
            {
                return this.ProductDescField;
            }
            set
            {
                this.ProductDescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId
        {
            get
            {
                return this.ProductIdField;
            }
            set
            {
                this.ProductIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName
        {
            get
            {
                return this.ProductNameField;
            }
            set
            {
                this.ProductNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://projetoavaliativo.dm113/01", ConfigurationName="EstoqueClientV1.StockService.IServicoEstoque")]
    public interface IServicoEstoque
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/ListProducts", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/ListProductsResponse")]
        string[] ListProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/ListProducts", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/ListProductsResponse")]
        System.Threading.Tasks.Task<string[]> ListProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/AddProduct", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/AddProductResponse")]
        bool AddProduct(EstoqueClientV1.StockService.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/AddProduct", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/AddProductResponse")]
        System.Threading.Tasks.Task<bool> AddProductAsync(EstoqueClientV1.StockService.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveProducts", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveProductsResponse")]
        bool RemoveProducts(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveProducts", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveProductsResponse")]
        System.Threading.Tasks.Task<bool> RemoveProductsAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/CheckStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/CheckStockResponse")]
        int CheckStock(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/CheckStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/CheckStockResponse")]
        System.Threading.Tasks.Task<int> CheckStockAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/AddStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/AddStockResponse")]
        bool AddStock(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/AddStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/AddStockResponse")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveStockResponse")]
        bool RemoveStock(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveStock", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/RemoveStockResponse")]
        System.Threading.Tasks.Task<bool> RemoveStockAsync(string productCode, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/getProduct", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/getProductResponse")]
        EstoqueClientV1.StockService.StockData getProduct(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/getProduct", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/getProductResponse")]
        System.Threading.Tasks.Task<EstoqueClientV1.StockService.StockData> getProductAsync(string productCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueChannel : EstoqueClientV1.StockService.IServicoEstoque, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueClient : System.ServiceModel.ClientBase<EstoqueClientV1.StockService.IServicoEstoque>, EstoqueClientV1.StockService.IServicoEstoque
    {
        
        public ServicoEstoqueClient()
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string[] ListProducts()
        {
            return base.Channel.ListProducts();
        }
        
        public System.Threading.Tasks.Task<string[]> ListProductsAsync()
        {
            return base.Channel.ListProductsAsync();
        }
        
        public bool AddProduct(EstoqueClientV1.StockService.Stock stock)
        {
            return base.Channel.AddProduct(stock);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(EstoqueClientV1.StockService.Stock stock)
        {
            return base.Channel.AddProductAsync(stock);
        }
        
        public bool RemoveProducts(string productCode)
        {
            return base.Channel.RemoveProducts(productCode);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveProductsAsync(string productCode)
        {
            return base.Channel.RemoveProductsAsync(productCode);
        }
        
        public int CheckStock(string productCode)
        {
            return base.Channel.CheckStock(productCode);
        }
        
        public System.Threading.Tasks.Task<int> CheckStockAsync(string productCode)
        {
            return base.Channel.CheckStockAsync(productCode);
        }
        
        public bool AddStock(string productCode, int quantity)
        {
            return base.Channel.AddStock(productCode, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string productCode, int quantity)
        {
            return base.Channel.AddStockAsync(productCode, quantity);
        }
        
        public bool RemoveStock(string productCode, int quantity)
        {
            return base.Channel.RemoveStock(productCode, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStockAsync(string productCode, int quantity)
        {
            return base.Channel.RemoveStockAsync(productCode, quantity);
        }
        
        public EstoqueClientV1.StockService.StockData getProduct(string productCode)
        {
            return base.Channel.getProduct(productCode);
        }
        
        public System.Threading.Tasks.Task<EstoqueClientV1.StockService.StockData> getProductAsync(string productCode)
        {
            return base.Channel.getProductAsync(productCode);
        }
    }
}
